@using CloudStorage
@model VendorInfoModel
@{
    ViewData["Title"] = "Profile Update";
    Layout = "~/Views/Shared/_SellerLayout.cshtml";
    var baseUrl = FileBuilder.BaseUrl();
}

@section Styles{
    <style>
        .show-image { cursor: pointer; color: #fff; background-color: #1c8ff4; border-radius: 50%; padding: 7px; }
        .empty-image { pointer-events: none; color: #ddd; background-color: #777; border-radius: 50%; padding: 7px; }

        #show-img-container h5 { font-weight: bold; text-align: center }
        #show-img-container img { width: 100% }

        .certificate-doc { display: flex; }
        .certificate-doc img { margin: 5px; }
    </style>
}

<div class="m-md-3">
    <form id="formUpdate">
        <h4 class="page-header mb-3">profile</h4>

        <div class="card card-body mb-4">
            <h5 class="font-weight-bold mb-3">Store Info</h5>

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Full Name</label>
                        <input type="text" class="form-control" disabled value="@Model.AuthorizedPerson" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Email</label>
                        <input type="text" class="form-control" disabled value="@Model.Email" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Phone</label>
                        <input type="text" class="form-control" disabled value="@Model.VerifiedPhone" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Store Name</label>
                        <input type="text" class="form-control" disabled value="@Model.StoreName" />
                        <small>www.esupershop.com/@Model.StoreSlugUrl</small>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="md-form">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="file-field flex-grow-1">
                                <div class="btn btn-outline-secondary btn-rounded btn-sm float-left">
                                    <span>Choose Logo<i class="fas fa-upload ml-3"></i></span>
                                    <input name="FileStoreLogo" type="file" accept="image/*">
                                    <input name="StoreLogoUrl" type="hidden" value="@Model.StoreLogoFileName">
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text" placeholder="Upload Store Logo">
                                </div>
                            </div>
                            <i data-file="@Model.StoreLogoFileName" data-name="Store Logo" class="@(string.IsNullOrEmpty(Model.StoreLogoFileName) ? "empty-image" : "show-image") fas fa-image"></i>
                        </div>
                        <small class="form-text text-danger">Need authority approval after change logo.</small>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-7">
                    <div class="form-group">
                        <label>Store Tag Line</label>
                        <input name="StoreTagLine" type="text" class="form-control" value="@Model.StoreTagLine" required>
                        <small class="form-text text-danger">Need authority approval after change Tag Line.</small>
                    </div>
                </div>
                <div class="col-lg-5">
                    <div class="md-form">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="file-field flex-grow-1">
                                <div class="btn btn-outline-secondary btn-rounded btn-sm float-left">
                                    <span>Choose Banner Image<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                    <input name="FileStoreBanner" type="file" accept="image/*">
                                    <input name="StoreBannerUrl" type="hidden" value="@Model.StoreBannerFileName">
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text" placeholder="Upload Banner Image">
                                </div>
                            </div>
                            <i data-file="@Model.StoreBannerFileName" data-name="Banner Image" class="@(string.IsNullOrEmpty(Model.StoreBannerFileName) ? "empty-image" : "show-image") fas fa-image"></i>
                        </div>
                        <small class="form-text text-danger">Need authority approval after change banner image.</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card card-body mb-4">
            <h5 class="font-weight-bold mb-3">Business Info</h5>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Address</label>
                        <input type="text" class="form-control" disabled value="@Model.StoreAddress" />
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Region/Division</label>
                        <input type="text" class="form-control" disabled value="@Model.StoreRegion" />
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Area</label>
                        <input type="text" class="form-control" disabled value="@Model.StoreArea" />
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Postcode</label>
                        <input type="text" class="form-control" disabled value="@Model.StorePostcode" />
                    </div>
                </div>
            </div>

            <div class="row my-2">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>NID Card No.</label>
                        <input name="NId" type="text" class="form-control" value="@Model.NId" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="md-form d-flex justify-content-between align-items-center">
                        <div class="file-field flex-grow-1">
                            <div class="btn btn-outline-secondary btn-rounded btn-sm float-left">
                                <span>NID(Front)<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                <input name="FileNidPhotoFront" type="file" accept="image/*">
                                <input name="NIdImageFrontUrl" type="hidden" value="@Model.NIdImageFrontFileName">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload NID(Front)">
                            </div>
                        </div>
                        <i data-file="@Model.NIdImageFrontFileName" data-name="NID(Front)" class="@(string.IsNullOrEmpty(Model.NIdImageFrontFileName)? "empty-image":"show-image") fas fa-image"></i>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="md-form d-flex justify-content-between align-items-center">
                        <div class="file-field flex-grow-1">
                            <div class="btn btn-outline-secondary btn-rounded btn-sm float-left">
                                <span>NID(Back)<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                <input name="FileNidPhotoBack" type="file" accept="image/*">
                                <input name="NIdImageBackUrl" type="hidden" value="@Model.NIdImageBackFileName">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload NID(Back)">
                            </div>
                        </div>
                        <i data-file="@Model.NIdImageBackFileName" data-name="NID(Back)" class="@(string.IsNullOrEmpty(Model.NIdImageBackFileName)? "empty-image":"show-image") fas fa-image"></i>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="md-form d-flex justify-content-between align-items-center">
                        <div class="file-field flex-grow-1">
                            <div class="btn btn-outline-secondary btn-rounded btn-sm float-left">
                                <span>Choose Trade License<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                <input name="FileTradeLicense" type="file" accept="image/*">
                                <input name="TradeLicenseImageUrl" type="hidden" value="@Model.TradeLicenseImageFileName">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload Trade License Copy">
                            </div>
                        </div>
                        <i data-file="@Model.TradeLicenseImageFileName" data-name="Trade License" class="@(string.IsNullOrEmpty(Model.TradeLicenseImageFileName)? "empty-image":"show-image") fas fa-image"></i>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="md-form d-flex justify-content-between align-items-center">
                        <div class="file-field flex-grow-1">
                            <div class="btn btn-outline-secondary btn-rounded btn-sm float-left">
                                <span>Choose Certificate<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                <input name="FileOthersCertificate" type="file" multiple accept="image/*">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload Others Certificates(multiple)">
                            </div>
                        </div>
                        <i data-name="Certificate" class="@(!Model.VendorCertificateFileNames.Any()? "empty-image":"show-image") fas fa-image"></i>
                    </div>
                    @{
                        var index = 0;
                        foreach (var url in Model.VendorCertificateFileNames)
                        {
                            <input name="VendorCertificateUrl[@index]" type="hidden" value="@url">
                            index++;
                        }
                    }
                </div>
            </div>
        </div>

        <div class="card card-body mb-4">
            <h5 class="font-weight-bold mb-3">Bank Account or Mobile Banking</h5>

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Account Title</label>
                        <input name="BankAccountTitle" type="text" class="form-control" value="@Model.BankAccountTitle" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Account Number</label>
                        <input name="BankAccountNumber" type="text" class="form-control" value="@Model.BankAccountNumber" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Bank Name</label>
                        <input name="BankName" type="text" class="form-control" value="@Model.BankName" />
                    </div>
                </div>
            </div>

            <div class="row my-2">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Branch Name</label>
                        <input name="BranchName" type="text" class="form-control" value="@Model.BranchName" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Routing Number</label>
                        <input name="RoutingNumber" type="text" class="form-control" value="@Model.RoutingNumber" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="md-form d-flex justify-content-between align-items-center">
                        <div class="file-field flex-grow-1">
                            <div class="btn btn-outline-secondary btn-rounded btn-sm float-left">
                                <span>Choose Cheque Copy<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                <input name="FileChequeCopy" type="file" accept="image/*">
                                <input name="ChequeImageUrl" type="hidden" value="@Model.ChequeImageFileName">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Cheque Copy">
                            </div>
                        </div>
                        <i data-file="@Model.ChequeImageFileName" data-name="Cheque Copy" class="@(string.IsNullOrEmpty(Model.ChequeImageFileName)? "empty-image":"show-image") fas fa-image"></i>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Mobile Banking</label>
                        <select name="MobileBankingType" class="form-control" asp-for="@Model.MobileBankingType">
                            <option value="">[ SELECT ]</option>
                            <option value="Bkash">Bkash</option>
                            <option value="Rocket">Rocket</option>
                            <option value="Nagad">Nagad</option>
                            <option value="SureCash">SureCash</option>
                            <option value="Ucash">Ucash</option>
                            <option value="mCash">mCash</option>
                        </select>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Mobile Banking Number</label>
                        <input name="MobileBankingNumber" type="text" class="form-control" value="@Model.MobileBankingNumber" />
                    </div>
                </div>
            </div>
        </div>

        <div class="card card-body mb-4">
            <h5 class="font-weight-bold mb-3">Warehouse Address</h5>

            <div class="row">
                <div class="col-lg-8">
                    <div class="form-group">
                        <label>Address</label>
                        <input name="WarehouseAddress" type="text" class="form-control" value="@Model.WarehouseAddress" required>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Postcode</label>
                        <input name="WarehousePostcode" type="text" class="form-control" value="@Model.WarehousePostcode" required>
                    </div>
                </div>
            </div>

            <div class="row my-2">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Region/Division</label>
                        <select asp-items="ViewBag.Regions" id="selectWarehouseRegion" asp-for="WarehouseRegionId" class="form-control">
                            <option value="">[ SELECT ]</option>
                        </select>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Area</label>
                        <select id="selectWarehouseArea" name="WarehouseAreaId" class="form-control" required>
                            <option value="">[ SELECT ]</option>
                        </select>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Phone</label>
                        <input name="WarehousePhone" type="text" class="form-control" value="@Model.WarehousePhone" required>
                    </div>
                </div>
            </div>
        </div>

        <div class="card card-body mb-4">
            <h5 class="font-weight-bold mb-3">Return Address</h5>

            <div class="row">
                <div class="col-lg-8">
                    <div class="form-group">
                        <label>Address</label>
                        <input name="ReturnAddress" type="text" class="form-control" value="@Model.ReturnAddress" required>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Postcode</label>
                        <input name="ReturnPostcode" type="text" class="form-control" value="@Model.ReturnPostcode" required>
                    </div>
                </div>
            </div>

            <div class="row my-2">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Region/Division</label>
                        <select asp-items="ViewBag.Regions" id="selectReturnRegion" asp-for="ReturnRegionId" class="form-control">
                            <option value="">[ SELECT ]</option>
                        </select>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Area</label>
                        <select id="selectReturnArea" name="ReturnAreaId" class="form-control" required>
                            <option value="">[ SELECT ]</option>
                        </select>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label>Phone</label>
                        <input name="ReturnPhone" type="text" class="form-control" value="@Model.ReturnPhone" required>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3">
            <input id="btnSubmit" type="submit" value="Submit" class="btn btn-danger" />
        </div>
    </form>
</div>

<!-- Modal Show Image-->
<div class="modal fade" id="modalShowImage" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="show-img-container" class="modal-body"></div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        (function() {
            //set image file
            $('input[type="file"]').change(function(e) {
                const pathInput = e.target.parentElement.parentElement.querySelector(".file-path");
                const size = e.target.files[0].size / 1024 / 1024;
                const allowSize = 2;
                const regex = new RegExp("(.*?)\.(jpeg|jpg|png|webp)$");


                if (!(regex.test(e.target.value.toLowerCase()))) {
                    e.target.value = "";
                    pathInput.value = "";

                    $(pathInput).notify("Please select image file", { position: "bottom left" });
                    return;
                }

                if (size > allowSize) {
                    e.target.value = "";
                    pathInput.value = "";
                    $(pathInput).notify(`image size must be less than ${allowSize}MB. your file size:${size.toFixed()} MB`, { position: "bottom left" });
                    return;
                }

                let fileName = "";
                for (let i = 0; i <= e.target.files.length - 1; i++) {
                    fileName += i > 0 ? `, ${e.target.files[i].name}` : e.target.files[i].name;
                }
                pathInput.value = fileName;
            });

            //warehouse region
            getAreaData(@Model.WarehouseRegionId, "warehouse", @Model.WarehouseAreaId);

            const selectWarehouseRegion = document.getElementById("selectWarehouseRegion");
            const selectWarehouseArea = document.getElementById("selectWarehouseArea");

            selectWarehouseRegion.addEventListener("change", function() {
                selectWarehouseArea.innerHTML = "";
                selectWarehouseArea.appendChild(createOptions({ AreaId: "", AreaName: "[ SELECT ]" }));

                getAreaData(this.value, "warehouse");
            });

            //return region
            getAreaData(@Model.ReturnRegionId, "return", @Model.ReturnAreaId);

            const selectReturnRegion = document.getElementById("selectReturnRegion");
            const selectReturnArea = document.getElementById("selectReturnArea");

            selectReturnRegion.addEventListener("change", function() {
                selectReturnArea.innerHTML = "";
                selectReturnArea.appendChild(createOptions({ AreaId: "", AreaName: "[ SELECT ]" }));

                getAreaData(this.value, "return");
            });

            //get area data by region
            function getAreaData(id, type, selectedId) {
                $.ajax({
                    url: "/Store/GetAreaByRegion",
                    data: { id },
                    success: response => {
                        if (type === "warehouse") {
                            response.forEach(item => selectWarehouseArea.appendChild(createOptions(item, selectedId)));
                        } else {
                            response.forEach(item => selectReturnArea.appendChild(createOptions(item, selectedId)));
                        }
                    },
                    error: error => { console.log(error) }
                });
            }

            //set options
            function createOptions(item, selectedId) {
                const option = document.createElement("option");
                option.innerText = item.AreaName;
                option.value = item.AreaId;
                option.selected = item.AreaId === selectedId;

                return option;
            }

            //form post
            const formUpdate = document.getElementById("formUpdate");
            formUpdate.addEventListener("submit", function(evt) {
                evt.preventDefault();

                disableBtn(this.btnSubmit, true);

                const formData = new FormData(this);

                $.ajax({
                    type: "POST",
                    url: "/Store/ProfileUpdate",
                    processData: false,
                    contentType: false,
                    data: formData,
                    success: response => {
                        if (response.IsSuccess) {
                            location.href = "/Dashboard/Seller";
                            return;
                        }

                        disableBtn(this.btnSubmit, false);
                    },
                    error: error => {
                        disableBtn(this.btnSubmit, false);
                        console.log(error);
                    }
                });
            });

            //disable btn
            function disableBtn(btn, isLoading) {
                btn.disabled = isLoading;
                btn.value = isLoading ? "submitting..." : "Submit";
            }


            //on show image
            formUpdate.addEventListener("click", function(evt) {
                const element = evt.target;
                const onShowClick = element.classList.contains("show-image");

                if (onShowClick) {
                    const url = '@baseUrl';
                    const fileName = element.getAttribute("data-file");
                    const name = element.getAttribute("data-name");
                    const showContainer = document.getElementById("show-img-container");

                    if (name === "Certificate") {
                        const certificateData = @Html.Raw(Json.Serialize(Model.VendorCertificateFileNames));
                        let doc = `<h5>${name}</h5><div class="certificate-doc">`;
                        certificateData.forEach(item => {
                            doc += `<img src="${url}/thumb_${item}" alt="${name}">`;
                        });
                        doc += "</div>"
                        showContainer.innerHTML = doc;
                    } else {
                        showContainer.innerHTML = `<h5>${name}</h5><img src="${url}/thumb_${fileName}" alt="${name}" />`;
                    }

                    $("#modalShowImage").modal("show");
                }
            });
        })();
    </script>
}
