@using eSuperShop.Data
@model eSuperShop.Repository.ProductDetailsViewModel

@{
    ViewData["Title"] = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    <link href="~/css-page/product-details.css?v=2.1" rel="stylesheet" />
    <link href="~/lib/rating/star-rating-svg.css" rel="stylesheet" />
}

<div class="container">
    <ol class="breadcrumb grey lighten-3 mt-3">
        <li class="breadcrumb-item">
            <a class="black-text" href="/Home">Home</a><i class="fas fa-angle-double-right mx-2"></i>
        </li>
        @if (Model.CatalogBreadcrumb.ParentCatalog != null)
        {
            <li class="breadcrumb-item">
                <a :href="/Category/Products/@Model.CatalogBreadcrumb.ParentCatalog.SlugUrl" class="black-text">@Model.CatalogBreadcrumb.ParentCatalog.CatalogName</a><i class="fas fa-angle-double-right mx-2"></i>
            </li>
        }
        <li class="breadcrumb-item active">@Model.CatalogBreadcrumb.CatalogName</li>
    </ol>

    <div class="row my-4">
        <div class="col-lg-9 col-md-7">
            <div class="card card-body">
                <div class="row">
                    <div class="col-xl-5 col-lg-6 mb-3">
                        <div id="img-container" href="@Model.Blobs[0]">
                            <img src="@Model.Blobs[0]" id="show-img" alt="" />
                        </div>

                        <div class="thumb-img-container">
                            <img src="/lib/imageZoomer/img/next-icon.png" class="icon-left" alt="" id="prev-img" />
                            <div class="small-container">
                                <div id="small-img-roll">
                                    @foreach (var url in Model.Blobs)
                                    {
                                        <img src="@url" class="show-small-img" alt="" />
                                    }
                                </div>
                            </div>
                            <img src="/lib/imageZoomer/img/next-icon.png" class="icon-right" alt="" id="next-img" />
                        </div>
                    </div>
                    
                    <div class="col-xl-7 col-lg-6">
                        <p class="mb-0">@Model.Name</p>
                        <a class="blue-text font-small">Sold By: @Model.StoreName</a>

                        <div class="d-flex align-items-center">
                            <div class="total-rating mr-2" data-rating="@Model.AverageReview.AverageRating"></div>
                            <span class="text-muted">@Model.AverageReview.TotalReview Reviews</span>
                            <span class="text-muted ml-3">@Model.Sold Orders</span>
                        </div>

                        <form id="cartForm">
                            <div class="my-3">
                                <strong>৳<span id="productPrice">@Model.Price</span></strong>

                                @if (Model.OldPrice > 0)
                                {
                                    <span class="old-price">৳@Model.OldPrice</span>
                                    <span class="p-discount-percent">
                                        -@((100 - ((100 * Model.Price) / Model.OldPrice)).ToString("F"))%
                                    </span>
                                }
                            </div>

                            <div id="attribute">
                                @foreach (var att in Model.Attributes)
                                {
                                    <p class="mb-0 key-name">@att.KeyName</p>
                                    @if (att.DisplayType == ProductAttributeDisplay.Image)
                                    {
                                        <div class="d-flex align-items-center mb-3">
                                            @foreach (var val in att.Values)
                                            {
                                                <label class="attribute-img">
                                                    <input class="radio-attribute" required id="@val.ProductAttributeValueId" type="radio" name="@att.KeyName" value="@val.ProductAttributeValueId">
                                                    <img for="@val.ProductAttributeValueId" src="@val.ImageUrl" alt="@val.Value" />
                                                </label>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center mb-3">
                                            @foreach (var val in att.Values)
                                            {
                                                <div class="attribute-text">
                                                    <input class="radio-attribute" required id="@val.ProductAttributeValueId" type="radio" name="@att.KeyName" value="@val.ProductAttributeValueId">
                                                    <label for="@val.ProductAttributeValueId">@val.Value</label>
                                                </div>
                                            }
                                        </div>
                                    }
                                }

                                <strong class="text-primary" id="additionalPrice"></strong>
                                <input id="hiddenQuantitySetId" type="hidden">
                                <input id="hiddenPriceAdjustment" type="hidden">
                            </div>

                            <div class="my-5">
                                QTY: <input id="inputQuantity" min="1" type="number" class="input-quantity mr-2" required value="1">
                                <span id="availableQty"></span>
                            </div>

                            <div>
                                <input id="btnAddToCart" class="btn btn-danger btn-md" type="submit" value="Add to Cart">
                                <input id="btnBuyNow" class="btn btn-outline-danger btn-md" type="submit" value="Buy Now">
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-5">
            <div class="card card-body text-center mb-3">
                <h6 class="font-weight-bold deep-orange-text"><i class="far fa-truck mr-1"></i>DELIVERY</h6>

                <p class="mb-0">Inside Dhaka 2 days</p>
                <p class="mb-0">Outside Dhaka 5 days</p>
            </div>

            <div class="card card-body text-center">
                <p class="mb-0">Recommended For You</p>

                @foreach (var rp in Model.RecommendedProducts)
                {
                    <div class="recomand-product">
                        <a href="/Product/Item/@rp.SlugUrl">
                            <img src="@rp.ImageUrl" alt="@rp.Name">
                            <span class="price-tag">৳@rp.Price</span>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="classic-tabs mb-5">
        <ul class="nav red darken-4" role="tablist">
            <li class="nav-item">
                <a class="nav-link waves-light active show" data-toggle="tab" href="#description" role="tab" aria-selected="true">DESCRIPTION</a>
            </li>
            <li class="nav-item">
                <a class="nav-link waves-light" data-toggle="tab" href="#spesification" role="tab" aria-selected="false">SPECIFICATIONS</a>
            </li>
            <li class="nav-item">
                <a class="nav-link waves-light" data-toggle="tab" href="#reviews" role="tab" aria-selected="false">REVIEWS (@Model.AverageReview.TotalReview)</a>
            </li>
            <li class="nav-item">
                <a class="nav-link waves-light" data-toggle="tab" href="#returnPolicy" role="tab" aria-selected="false">RETURN POLICY</a>
            </li>
        </ul>

        <div class="tab-content card">
            <div class="tab-pane fade active show" id="description" role="tabpanel">
                @Html.Raw(Model.FullDescription)
            </div>
            <div class="tab-pane fade" id="spesification" role="tabpanel">
                @foreach (var sp in Model.Specifications)
                {
                    <p><span class="text-muted">@sp.KeyName:</span> @string.Join(", ", sp.Values)</p>
                }
            </div>
            <div class="tab-pane fade" id="reviews" role="tabpanel">
                <div class="row">
                    <div class="col-lg-6 text-center">
                        <h5>AVERAGE RATING</h5>
                        <div id="review-avg">
                            <span id="review-count">
                                @Model.AverageReview.AverageRating
                            </span>
                        </div>
                        <p>Based on 5 ratings</p>
                    </div>
                    <div class="col-lg-6">
                        <div class="d-flex justify-content-between align-items-center px-4">
                            <div class="rating-title">5 Stars</div>
                            <div class="progress md-progress mb-0">
                                <div class="progress-bar warning-color-dark" role="progressbar" style="width: @(Model.AverageReview.TotalReview > 0 ? (100 * Model.AverageReview.Star5) / Model.AverageReview.TotalReview : 0)%;" aria-valuenow="@Model.AverageReview.Star5" aria-valuemin="0" aria-valuemax="@Model.AverageReview.TotalReview"></div>
                            </div>
                            <span class="rating-title text-center">(@Model.AverageReview.Star5)</span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center px-4">
                            <div class="rating-title">4 Stars</div>
                            <div class="progress md-progress mb-0">
                                <div class="progress-bar warning-color-dark" role="progressbar" style="width: @(Model.AverageReview.TotalReview > 0 ? (100 * Model.AverageReview.Star4) / Model.AverageReview.TotalReview : 0)%;" aria-valuenow="@Model.AverageReview.Star4" aria-valuemin="0" aria-valuemax="@Model.AverageReview.TotalReview"></div>
                            </div>
                            <span class="rating-title text-center">(@Model.AverageReview.Star4)</span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center px-4">
                            <div class="rating-title">3 Stars</div>
                            <div class="progress md-progress mb-0">
                                <div class="progress-bar warning-color-dark" role="progressbar" style="width: @(Model.AverageReview.TotalReview > 0 ? (100 * Model.AverageReview.Star3) / Model.AverageReview.TotalReview : 0)%;" aria-valuenow="@Model.AverageReview.Star3" aria-valuemin="0" aria-valuemax="@Model.AverageReview.TotalReview"></div>
                            </div>
                            <span class="rating-title text-center">(@Model.AverageReview.Star3)</span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center px-4">
                            <div class="rating-title">2 Stars</div>
                            <div class="progress md-progress mb-0">
                                <div class="progress-bar warning-color-dark" role="progressbar" style="width: @(Model.AverageReview.TotalReview > 0 ? (100 * Model.AverageReview.Star2) / Model.AverageReview.TotalReview : 0)%;" aria-valuenow="@Model.AverageReview.Star2" aria-valuemin="0" aria-valuemax="@Model.AverageReview.TotalReview"></div>
                            </div>
                            <span class="rating-title text-center">(@Model.AverageReview.Star2)</span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center px-4">
                            <div class="rating-title">1 Star</div>
                            <div class="progress md-progress mb-0">
                                <div class="progress-bar warning-color-dark" role="progressbar" style="width: @(Model.AverageReview.TotalReview > 0 ? (100 * Model.AverageReview.Star1) / Model.AverageReview.TotalReview : 0)%;" aria-valuenow="@Model.AverageReview.Star1" aria-valuemin="0" aria-valuemax="@Model.AverageReview.TotalReview"></div>
                            </div>
                            <span class="rating-title text-center">(@Model.AverageReview.Star1)</span>
                        </div>
                    </div>
                </div>

                <div class="p-5">
                    <div class="my-4 border-bottom">
                        <h4 class="font-weight-bold">PRODUCT REVIEWS</h4>
                    </div>

                    @foreach (var review in Model.Reviews)
                    {
                        <p class="review-name">@review.CustomerUserName</p>
                        <div class="user-rating" data-rating="@review.Rating"></div>

                        <small class="review-time"><i class="fal fa-clock"></i> @review.ReviewedOnUtc.ToShortDateString()</small>
                        <p class="review-text">@review.Review</p>
                    }
                </div>
            </div>
            <div class="tab-pane fade" id="returnPolicy" role="tabpanel"></div>
        </div>
    </div>


    <div id="seller-recomnd" class="row">
        @foreach (var product in Model.RecommendedProducts)
        {
            <div class="col-lg-3 col-sm-6 mb-3">
                <div class="card hoverable h-100">
                    <div class="view overlay">
                        <img class="card-img-top" src="@product.ImageUrl" alt="@product.Name">
                        <a href="/Product/Item/@product.SlugUrl">
                            <div class="mask rgba-white-slight"></div>
                        </a>
                    </div>
                    <div class="card-body pb-1">
                        <p class="product-name">@product.Name</p>
                        <div class="pricing-area">
                            <div class="p-price">
                                <span>৳@product.Price</span>
                                @if (product.OldPrice > 0)
                                {
                                    <span class="p-discount d-block">৳@product.OldPrice</span>
                                }
                            </div>
                            <div class="p-rating text-right">
                                <div class="d-flex align-items-center">
                                    <div class="mr-2">
                                        <div class="total-rating" data-rating="@product.Rating"></div>
                                    </div>
                                    <span :class="rating-count">@product.RatingBy</span>
                                </div>
                                @if (product.OldPrice > 0)
                                {
                                    <span class="p-discount-percent">@((100 - ((100 * product.Price) / product.OldPrice)).ToString("F")) % off</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>


    <div class="card card-body mt-3" id="faq">
        <div class="my-4 border-bottom pb-2">
            <h4 class="font-weight-bold mb-1">QUESTIONS ABOUT THIS PRODUCT (@Model.TotalFaqs)</h4>
            @if (!User.Identity.IsAuthenticated)
            {
                <div class="text-muted">
                    <a asp-controller="Account" asp-action="CustomerLogin" asp-route-returnUrl="@($"{Context.Request.Path}{Context.Request.QueryString}")">Login</a>
                    OR
                    <a asp-controller="Account" asp-action="CustomerLogin" asp-route-returnUrl="@($"{Context.Request.Path}{Context.Request.QueryString}")">Register</a>
                    to ask questions
                </div>
            }
            else
            {
                if (User.IsInRole("Customer"))
                {
                    <button id="btnAskQuestion" class="btn btn-deep-orange btn-md">Ask Question</button>
                }
            }
        </div>

        @foreach (var faq in Model.Faqs)
        {
            <div class="my-4 border-bottom pb-3">
                <div class="d-flex align-items-start">
                    <div class="questing-title">Question <i class="fal fa-caret-right"></i></div>
                    <div class="text-container">
                        <h6>@faq.Question</h6>
                        <p>-@faq.CustomerUserName <small class="ml-2">@faq.QuestionOnUtc.ToShortDateString()</small></p>
                    </div>
                </div>

                <div class="d-flex align-items-start mt-4">
                    <div class="answer-title">Answer <i class="fal fa-caret-right"></i></div>
                    <div class="text-container">
                        <h6>@faq.Answer</h6>
                        <p>-Admin <small>@faq.AnswerOnUtc.ToShortDateString()</small></p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts{
    <script src="~/lib/imageZoomer/zoom-image.js"></script>
    <script src="~/lib/imageZoomer/main.js"></script>
    <script src="~/lib/rating/jquery.star-rating-svg.min.js"></script>

    <script>
        $(function() {
            $(".total-rating").starRating({
                totalStars: 5,
                starSize: 16,
                emptyColor: '#BBBBBB',
                activeColor: '#EE7458',
                useGradient: false,
                readOnly: true
            });

            $(".user-rating").starRating({
                totalStars: 5,
                starShape: 'rounded',
                starSize: 20,
                emptyColor: '#BBBBBB',
                activeColor: '#227DE9',
                useGradient: false,
                readOnly: true
            });

            //uncheck radio button
            const inp = document.getElementsByTagName('input');
            for (let i = inp.length - 1; i >= 0; i--) {
                if (inp[i].type === 'radio')
                    inp[i].checked = false;
            }
        });

        //selectors
        const cartForm = document.getElementById("cartForm");
        const productPrice = cartForm.querySelector("#productPrice");
        const hiddenPriceAdjustment = cartForm.hiddenPriceAdjustment;
        const inputQuantity = cartForm.inputQuantity;
        const hiddenQuantitySetId = cartForm.hiddenQuantitySetId;
        const btnAddToCart = cartForm.btnAddToCart;
        const btnBuyNow = cartForm.btnBuyNow;
        let attributesValue = null;

        const btnAskQuestion = document.getElementById("btnAskQuestion");
        const attribute = document.getElementById("attribute");

        //event
        attribute.addEventListener("change", function(evt) {
            const element = evt.target;

            const onAttribute = element.classList.contains("radio-attribute");
            if (!onAttribute) return;

            const valueIds = document.querySelectorAll('input[type="radio"]:checked');
            const keyNames = document.querySelectorAll(".key-name");
            const attributeValueId = [];

            valueIds.forEach(id => {
                if (id.value) attributeValueId.push(+id.value);
            });

            if (keyNames.length !== attributeValueId.length) return;

            const model = {
                ProductId: @Model.ProductId,
                ProductAttributeValueIds: attributeValueId
            }

            const availableQty = document.getElementById("availableQty");

            showLoader(true);

            $.ajax({
                url: "/Product/GetInsertedStock",
                type: "POST",
                data: model,
                success: function(response) {
                    if (response.IsSuccess) {
                        const { Quantity, ProductQuantitySetId, PriceAdjustment, AttributesWithValue } = response.Data;
                        //global variable
                        attributesValue = AttributesWithValue;

                        const isAdded = shoppingCart.getProduct(ProductQuantitySetId);
                        const newQuantity = isAdded ? (Quantity - isAdded.Quantity) : Quantity;

                        if (isAdded) {
                            $.notify("Product Already added", "success", { position: "right" });
                        }


                        availableQty.textContent = `${newQuantity} pieces available`;
                        availableQty.style.color = "#212529";

                        inputQuantity.value = isAdded ? isAdded.Quantity : 1;
                        inputQuantity.setAttribute("max", Quantity);

                        productPrice.textContent = @Model.Price + PriceAdjustment;
                        hiddenQuantitySetId.value = ProductQuantitySetId;
                        hiddenPriceAdjustment.value = PriceAdjustment;
                    } else {
                        availableQty.textContent = `Product not available`;
                        availableQty.style.color = "red";

                        inputQuantity.setAttribute("max", 0);

                        productPrice.textContent = @Model.Price;
                        hiddenQuantitySetId.value = "";
                        hiddenPriceAdjustment.value = 0;
                    }

                    showLoader(false);
                },
                error: function(err) {
                    console.log(err);
                    showLoader(false);
                }
            });
        });

        //add to cart
        cartForm.addEventListener("submit", function(evt) {
            evt.preventDefault();

            const extraPrice = +hiddenPriceAdjustment.value || 0;

            const obj = {
                ProductId: @Model.ProductId,
                Name: "@Model.Name",
                Price: @Model.Price + extraPrice,
                Quantity: +inputQuantity.value,
                ProductQuantitySetId: +hiddenQuantitySetId.value,
                attributesValue
            }

            shoppingCart.addItemToCart(obj);
            displayCart();

            $.notify("Product added to Shopping Cart", "success", { position: "right" });
        });

        //buy now
        btnBuyNow.addEventListener("submit", function(evt) {
            evt.preventDefault();

        });


        //loader
        function showLoader(status) {
            btnAddToCart.disabled = status;
            btnBuyNow.disabled = status;
        }

        @*const body = {
            ProductId: @Model.ProductId
            //Page: 1,
            //PageSize:4
        };

        $.ajax({
            //url: "/Product/GetReviews",
            url: "/Product/GetAverageReviews",
            data: body,
            success: function(response) {
                console.log(response);
                document.getElementById("review-count").textContent = response.Data.AverageRating;
            },
            error: function(err) {
                console.log(err);
            }
        });*@
    </script>
}
