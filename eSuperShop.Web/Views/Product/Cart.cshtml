@using CloudStorage
@model IEnumerable<OrderCartStoreWiseModel>  
@{
    ViewData["Title"] = "Cart";
    var baseUrl = FileBuilder.BaseUrl();
}
@section Styles{
    <style>
        /*shopping cart*/
        #formCart img { max-height: 100px; margin-right: 5px; min-width: 50px; border-radius: 5px }
      
        /*shopping cart quantity input*/
        .item-quantity {display: block; max-width:120px; border: 1px solid #ddd; border-radius: 5px; text-align: center; padding: 3px 0;margin: 5px 0 }

        .delete-item{ color: red; cursor: pointer}
    </style>
}

<div class="container mb-5">
    <form id="formCart">
        <div class="row">
            <div id="all-store" class="col-xl-8 col-lg-8 mt-4">
                <div class="card card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <input id="btnDeleteAll" type="button" value="Delete" class="btn btn-danger btn-md">
                        <h4 class="font-weight-bold mb-0">Cart Items</h4>

                        <input type="checkbox" onclick="checkAll(this)" class="form-check-input" id="allCheck">
                        <label class="form-check-label" for="allCheck">SELECT ALL</label>
                    </div>
                </div>
                
                @{ var index = 1;}
                @foreach (var item in Model)
                {
                    <div id="store-@index" class="card card-body mt-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="font-weight-bold mb-0">@item.StoreName</h6>
                            <div class="form-check">
                                <input onclick="checkAll(this)" type="checkbox" class="form-check-input" id="storeAllCheck-@index">
                                <label class="form-check-label" for="storeAllCheck-@index"></label>
                            </div>
                        </div>
                        <hr/>
                        @foreach (var product in item.Products)
                        {
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <div class="d-flex align-items-center">
                                    <img src="@baseUrl/@product.ImageFileName" alt=""/>
                                    <div>
                                        <p>@product.ProductName</p>
                                        <h5 class="mb-0">
                                            @foreach (var att in product.AttributesWithValue)
                                            {
                                                <span class="badge badge-pill grey darken-3 mr-2">@att.KeyName: @att.Value</span>
                                            }
                                        </h5>
                                    </div>
                                </div>
                                <div class="text-center">
                                    <strong class="d-block">৳@product.Price</strong>
                                    <input id="@product.OrderCartId" class="item-quantity" data-price="@product.Price" value="@product.Quantity" min="1" type="number">
                                    <i id="@product.OrderCartId" class="fas fa-trash delete-item"></i>
                                </div>
                                <div class="form-check">
                                    <input name="productCheckbox" onclick="checkSingle(this)" id="product-check-@product.OrderCartId" data-id="@product.OrderCartId" type="checkbox" class="form-check-input" @(product.IsSelected?"checked":"")>
                                    <label class="form-check-label" for="product-check-@product.OrderCartId"></label>
                                </div>
                            </div>
                        }
                    </div>
                    index++;
                }
            </div>

            <div class="col-xl-4 col-lg-4 mt-4">
                <div class="card card-body">
                    <h4 class="font-weight-bold border-bottom pb-3 mb-3">Order Summary</h4>
                    <ul class="list-group mb-3">
                        <li class="d-flex justify-content-between align-items-center">
                            <h5>Product Total</h5>
                            <h5>৳<span id="selectedCartTotal">0</span></h5>
                        </li>
                    </ul>

                    <button id="btnSubmit" type="submit" class="btn btn-danger btn-rounded mt-2">Process To Checkout <i class="fas fa-angle-right right"></i></button>
                </div>
            </div>
        </div> 
    </form>
</div>

@section Scripts{
    <script>
        //select all
        function checkAll(self) {
            const parentCheckboxId = $(self).parent().parent().parent().attr('id');
            $(`#${parentCheckboxId}`).find('input[type="checkbox"]').prop("checked", self.checked);

            //set total checked product price
            getCheckedTotalPrice();

            //set checkbox checked
            methods.allProductSelectedSet();
        }

        //select single
        function checkSingle(self) {
            const parentCheckboxId = $(self).parent().parent().parent().attr('id');
            const allCheckboxes = $(`#${parentCheckboxId}`).find('input[type="checkbox"]').not(":eq(0)");

            const isAllChecked = (allCheckboxes.length === allCheckboxes.filter(":checked").length);
            $(`#${parentCheckboxId}`).find('input[type="checkbox"]:first').prop("checked", isAllChecked);

            //set total checked product price
            getCheckedTotalPrice();

            //set checkbox checked
            methods.signleProductSelectedSet(self);
        }

        //calculate total
        function getCheckedTotalPrice() {
            const selectedCartTotal = document.getElementById("selectedCartTotal");
            const checkboxes = document.getElementsByName("productCheckbox");

            let total = 0;
       
            for (let i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {
                    const input = checkboxes[i].parentElement.parentElement.querySelector(".item-quantity");
                    const quantity = +input.value;
                    const price = +input.getAttribute("data-price");

                    total += price * quantity;
                }

                //update total amount
                selectedCartTotal.textContent = total;
            }
        }

        //on page loaded
        getCheckedTotalPrice();

        //private method
        (function() {
            const formCart = document.getElementById("formCart");

            //on change quantity
            formCart.addEventListener("change",
                function(evt) {
                    const element = evt.target;
                    const onQuantity = element.classList.contains("item-quantity");
                    if (onQuantity) {
                        methods.setProductQuantity(element);
                        getCheckedTotalPrice();
                    }
                });

            //delete cart
            formCart.addEventListener("click",
                function (evt) {
                    const element = evt.target;
                    const onDelete = element.classList.contains("delete-item");
                    if (onDelete) {
                        $.ajax({
                            url: "/Product/DeleteCartItem",
                            type: "POST",
                            data: { orderCartId: element.id },
                            success: function (response) {
                                if (response.IsSuccess) {
                                    element.parentElement.parentElement.remove();
                                    getCheckedTotalPrice();
                                    return;
                                }

                                $.notify(response.Message, response.IsSuccess ? "success" : "error");
                            },
                            error: function(err) {
                                console.log(err);
                            }
                        });
                    }
                });

            //delete all cart
            const btnDeleteAll = document.getElementById("btnDeleteAll");
            btnDeleteAll.addEventListener("click", function () {
                this.disabled = true;

                $.ajax({
                    url: "/Product/DeleteAll",
                    type: "POST",
                    success: response=> {
                        if (response.IsSuccess) {
                            location.reload();
                            return;
                        }
                        this.disabled = false;
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");
                    },
                    error: function(err) {
                        console.log(err);
                    }
                });
            });
        })();
    </script>
}
