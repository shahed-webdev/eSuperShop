@using CloudStorage

@{
    ViewData["Title"] = "Pending Profile Info";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var baseUrl = FileBuilder.BaseUrl();
}

@section Styles{
    <style>
        #data-table tr td img { width: 100% }
        .before-info { border: 1px solid #dc143c; padding: 5px; border-radius: 3px; }
        .after-info { border: 1px solid #32cd32; padding: 5px; border-radius: 3px; }
    </style>
}

<div class="m-3">
    <h4 class="page-header mb-3">Pending Profile Info</h4>

    <div class="card card-body">
        <table id="data-table" class="table table-sm table-bordered">
            <thead>
                <tr>
                    <th><strong>Auth. Person</strong></th>
                    <th><strong>Store</strong></th>
                    <th><strong>Logo</strong></th>
                    <th><strong>Banner</strong></th>
                    <th><strong>Tag line</strong></th>
                    <th><strong>Approved</strong></th>
                    <th><strong>Reject</strong></th>
                </tr>
            </thead>
        </table>
    </div>
</div>


@section Scripts{
    <script>
        $(function() {
            dataTable.getData();
        });

        //get data
        var dataTable = {
            table: null,
            init: function() {
                dataTable.table = $("#data-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/Seller/GetPendingProfileInfo",
                        type: "POST"
                    },
                    columns:
                    [
                        {
                            data: "AuthorizedPerson", "render": function(data, type, row, meta) {
                                return `<strong class="d-block">${data}</strong><span>${row.VerifiedPhone}</span>`;
                            }
                        },
                        {
                            data: "StoreName", "render": function(data, type, row, meta) {
                                return `<strong class="d-block">${data}</strong><span>${row.Email}</span>`;
                            }
                        },
                        {
                            data: "StoreLogoFileName", "render": function(data, type, row, meta) {
                                const beforeData = data ? `<img src="@baseUrl/${data}" class="before-info mb-1" />` : "";
                                const afterData = row.ChangedStoreLogoFileName ? `<img src="@baseUrl/${row.ChangedStoreLogoFileName}" class="after-info" />` : "";
                                return `${beforeData} ${afterData}`;
                            }
                        },
                        {
                            data: "StoreBannerFileName", "render": function(data, type, row, meta) {
                                const beforeData = data ? `<img src="@baseUrl/${data}" class="before-info mb-1" />` : "";
                                const afterData = row.ChangedStoreBannerFileName ? `<img src="@baseUrl/${row.ChangedStoreBannerFileName}" class="after-info" />` : "";
                                return `${beforeData} ${afterData}`;
                            }
                        },
                        {
                            data: "StoreTagLine", "render": function(data, type, row, meta) {
                                const beforeData = data ? `<span class="before-info mr-1">${data}</span>` : "";
                                return `${beforeData}<span class="after-info">${row.ChangedStoreTagLine}</span>`;
                            }
                        },
                        {
                            data: "IsApproved", "render": function(data, type, row, meta) {
                                return `<input id="${row.VendorId}" type="checkbox" class="form-check-input"><label class="approve form-check-label" for="${row.VendorId}"></label>`;
                            }
                        },
                        {
                            data: "VendorId", "render": function(data, type, row, meta) {
                                return `<a id="${row.VendorId}" class="delete fas fa-trash red-text" data-url="/Seller/DeleteVendor/${data}"></a>`;
                            }
                        }
                    ],
                    columnDefs: [
                        //{ 'searchable': false, 'targets': [1, 2] },
                        //{ 'sortable': false, 'targets': [1, 2] },
                        { 'className': "text-center", "targets": [5, 6] }
                    ]
                });
            },
            operand: {
                Equal: 0,
                NotEqual: 1,
                GreaterThan: 2,
                LessThan: 3,
                GreaterThanOrEqual: 4,
                LessThanOrEqual: 5,
                Contains: 6,
                StartsWith: 7,
                EndsWith: 8
            },
            getData: function() {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            },
            addSign: function(data) { return `${data}/-` }
        }

        //approve / delete
        const onTable = document.getElementById("data-table");
        onTable.addEventListener("click", function(evt) {
            const element = evt.target;

            //approve
            const onApprove = element.classList.contains("approve");
            if (onApprove) {
                const cb = element.previousElementSibling;

                if (!cb.checked) {
                    cb.disabled = true;

                    $.ajax({
                        type: "POST",
                        url: `/Seller/ApproveProfileInfo`,
                        data: { id: +cb.id },
                        success: function(response) {
                            $.notify(response.Message, response.IsSuccess ? "success" : "error");

                            if (!response.IsSuccess) {
                                cb.disabled = false;
                                return;
                            }

                            location.reload();
                        },
                        error: function(err) {
                            console.log(err);
                            cb.disabled = false;
                        }
                    });
                }
            }

            //delete
            const onDelete = element.classList.contains("delete");
            if (onDelete) {
                $.ajax({
                    url: `/Seller/RejectProfileInfo/${element.id}`,
                    success: function(response) {
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");

                        if (response.IsSuccess)
                            location.reload();
                    },
                    error: function(err) { console.log(err); }
                });
            }
        });
    </script>
}
