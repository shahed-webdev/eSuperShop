@using eSuperShop.Repository
@model LoginViewModel
@{
    ViewBag.Title = "Seller Registration";
}

@section Styles {
    <link href="~/css-page/Login.css" rel="stylesheet"/>
    <style>
        .serach-container, #othersInfo { display: none; }
        #btnResend { color: #1e90ff }
        .timerCount { pointer-events: none; cursor: none; color: #000 !important }
    </style>
}

<div class="container">
    <div class="row">
        <div class="col-md-8 col-lg-7 mx-auto">
            <div class="card card-signin my-5">
                <div class="card-body">
                    <h5 class="card-title text-center mb-1">
                        <strong class="dark-grey-text">Create Account</strong>
                    </h5>
                    <p class="mb-4 text-center text-muted">Enter Our Platform As A Seller </p>

                    <form id="formRegistration">
                        <div class="md-form input-group mb-5">
                            <input id="inputMobile" type="text" class="form-control" required>
                            <div class="input-group-append">
                                <button id="btnSendCode" type="button" class="btn btn-danger btn-md m-0 px-3"><i class="fas fa-check mr-1"></i>Verify</button>
                            </div>
                            <label for="inputMobile">Mobile Number</label>
                        </div>
                        <span id="mobileError" class="field-validation-error"></span>

                        <div id="othersInfo">
                            <div class="md-form mb-5">
                                <input id="inputEmail" class="form-control" type="email" required>
                                <label for="inputEmail">Email</label>
                                <small class="form-text text-muted">Email Will be Used As Login ID</small>
                            </div>
                            <div class="md-form mb-5">
                                <input id="inputAuthorizedPerson" class="form-control" type="text" required>
                                <label for="inputAuthorizedPerson">Authorized Person</label>
                            </div>
                            <div class="md-form mb-5">
                                <input id="inputStoreName" type="text" class="form-control" required>
                                <label for="inputStoreName">Store Name</label>
                            </div>
                            <div class="md-form mb-5">
                                <input id="inputStoreAddress" type="text" class="form-control" required>
                                <label for="inputStoreAddress">Store Address</label>
                            </div>
                            <button id="btnSignUp" class="btn btn-block btn-rounded btn-danger z-depth-1a mb-3" type="submit">Create account</button>
                            <div>
                                <span id="accountError" class="field-validation-error"></span>
                            </div>
                        </div>
                    </form>

                    <div class="mt-5">
                        <p class="mb-0 font-small grey-text d-flex justify-content-end">Already have account? <a href="/Account/Login" class="blue-text ml-1">Sign In</a></p>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="codeVerifyModal" tabindex="-1" role="dialog" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog cascading-modal" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary justify-content-center">
                <h5 class="m-0 white-text">Verify Mobile Number</h5>
            </div>

            <div class="modal-body">
                <form id="formVerify">
                    <div class="md-form mb-3">
                        <input id="inputCode" type="number" class="form-control" required>
                        <label for="inputCode">Enter Code</label>
                        <span id="codeError" class="field-validation-error"></span>
                    </div>

                    <div class="text-center">
                        <a id="btnResend" class="timerCount"></a>
                    </div>

                    <div class="text-center mt-4">
                        <button id="btnSubmitVerify" type="submit" class="btn btn-primary mt-1">Verify <i class="fas fa-check ml-1"></i></button>
                    </div>
                    <span id="verifyError" class="field-validation-error"></span>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        //registration form
        const formRegistration = document.getElementById("formRegistration");
        const btnSendCode = document.getElementById("btnSendCode");
        const mobileError = document.getElementById("mobileError");
        const codeVerifyModal = $("#codeVerifyModal");
        const othersInfo = formRegistration.querySelector("#othersInfo");

        //verify form
        const formVerify = document.getElementById("formVerify");
        const btnResend = formVerify.querySelector("#btnResend");
        const verifyError = formVerify.querySelector("#verifyError");

        //send code
        btnSendCode.addEventListener("click", function(evt) {
            mobileError.textContent = "";
            if (!formRegistration.inputMobile.value) return;

            this.disabled = true;
            this.innerText = "sending..";

            const time = 60;

            $.ajax({
                type: "POST",
                url: "/Seller/SendCode",
                data: { mobile: formRegistration.inputMobile.value, time },
                success: function(response) {
                    if (response.IsSuccess) {
                        codeVerifyModal.modal('show');
                        btnSendCode.disabled = false;
                        btnSendCode.innerText = "Verify";

                        startTimer(time);
                    } else {
                        btnSendCode.disabled = false;
                        btnSendCode.innerText = "Verify";
                        mobileError.textContent = response.Message;
                    }
                },
                error: function(err) {
                    console.log(err);
                    btnSendCode.disabled = false;
                    btnSendCode.innerText = "Verify";
                }
            });
        });

        //re-send code
        btnResend.addEventListener("click", function(evt) {
            evt.preventDefault();

            if (!formRegistration.inputMobile.value) return;

            const time = 60;

            $.ajax({
                type: "POST",
                url: "/Seller/SendCode",
                data: { mobile: formRegistration.inputMobile.value, time },
                success: function(response) {
                    console.log(response);

                    if (response.IsSuccess) {
                        formVerify.inputCode.value = "";
                        startTimer(time);
                    }
                },
                error: function(err) {
                    console.log(err);
                }
            });
        });

        //verify code
        formVerify.addEventListener('submit', function(evt) {
            evt.preventDefault();
            verifyError.textContent = "";

            this.btnSubmitVerify.disabled = true;
            this.btnSubmitVerify.textContent = "verifying...";

            const code = this.inputCode.value.trim();
            const mobile = formRegistration.inputMobile.value.trim();

            $.ajax({
                type: "POST",
                url: "/Seller/CodeVerify",
                data: { code, mobile },
                success: function(response) {
                    console.log(response);

                    if (response.IsSuccess) {
                        codeVerifyModal.modal('hide');
                        formRegistration.inputMobile.disabled = true;

                        btnSendCode.disabled = true;
                        btnSendCode.classList.add("btn-success");
                        btnSendCode.classList.remove("btn-danger");
                        btnSendCode.innerText = "Verified";

                        othersInfo.style.display = "block";
                    } else {
                        verifyError.textContent = response.Message;
                    }

                    formVerify.btnSubmitVerify.disabled = false;
                    formVerify.btnSubmitVerify.innerText = "verify";
                },
                error: function(err) {
                    console.log(err);
                    formVerify.btnSubmitVerify.disabled = false;
                    formVerify.btnSubmitVerify.textContent = "verify";
                }
            });
        });

        //post registration
        formRegistration.addEventListener('submit', function(evt) {
            evt.preventDefault();
            const accountError = document.getElementById("accountError");
            accountError.textContent = "";

            this.btnSignUp.disabled = true;
            this.btnSignUp.textContent = "submitting..";

            const data = {
                Email: this.inputEmail.value,
                AuthorizedPerson: this.inputAuthorizedPerson.value,
                VerifiedPhone: this.inputMobile.value,
                StoreName: this.inputStoreName.value,
                StoreAddress: this.inputStoreAddress.value
            }

            $.ajax({
                type: "POST",
                url: "/Seller/SignUp",
                data,
                success: function(response) {
                    console.log(response);
                    if (response.IsSuccess) {
                        location.href = "/Seller/Success";
                    } else {
                        accountError.textContent = response.Message;
                    }

                    formRegistration.btnSignUp.disabled = false;
                    formRegistration.btnSignUp.textContent = "Create account";
                },
                error: function(err) {
                    console.log(err);
                    formRegistration.btnSignUp.disabled = false;
                    formRegistration.btnSignUp.textContent = "Create account";
                }
            });
        });


        //count down
        function startTimer(duration) {
            let timer = duration;
            let seconds = 0;
            btnResend.classList.add("timerCount");

            const interval = setInterval(function() {
                seconds = parseInt(timer % 60, 10);
                seconds = seconds < 10 ? `0${seconds}` : seconds;

                btnResend.textContent = `Resend after ${seconds}s`;
                btnResend.style.pointerEvent = "none";

                if (--timer < 0) {
                    clearInterval(interval);
                    btnResend.textContent = "Re Send Code";
                    btnResend.classList.remove("timerCount");
                }

            }, 1000);
        }
    </script>
}