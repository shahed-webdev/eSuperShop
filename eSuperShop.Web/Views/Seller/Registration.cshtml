@using eSuperShop.Repository
@model LoginViewModel
@{
    ViewBag.Title = "Seller Registration";
}

@section Styles {
    <link href="~/css-page/Login.css" rel="stylesheet" />
    <style>
        .serach-container, #othersInfo { display: none; }
        #btnResend { color: #1e90ff }
        .timerCount { pointer-events: none; cursor: none; color: #000 !important }
    </style>
}

<div class="container">
    <div class="row">
        <div class="col-md-8 col-lg-7 mx-auto">
            <div class="card card-signin my-5">
                <div class="card-body">
                    <h5 class="card-title text-center mb-1">
                        <strong class="dark-grey-text">Create Account</strong>
                    </h5>
                    <p class="mb-4 text-center text-muted">Enter our platform as a seller</p>

                    <form id="formRegistration">
                        <div class="md-form input-group mb-5">
                            <input id="inputMobile" name="VerifiedPhone" type="text" class="form-control" required>
                            <div class="input-group-append">
                                <button id="btnSendCode" type="button" class="btn btn-danger btn-md m-0 px-3"><i class="fas fa-check mr-1"></i>Verify</button>
                            </div>
                            <label for="inputMobile">Mobile Number</label>
                        </div>
                        <span id="mobileError" class="field-validation-error"></span>

                        <div id="othersInfo">
                            <div class="md-form mb-5">
                                <input id="inputEmail" name="Email" class="form-control" type="email" required>
                                <label for="inputEmail">Email</label>
                                <small class="form-text text-muted">Email will be used as login id</small>
                            </div>
                            <div class="md-form mb-5">
                                <input id="inputAuthorizedPerson" name="AuthorizedPerson" class="form-control" type="text" required>
                                <label for="inputAuthorizedPerson">Authorized Person</label>
                            </div>
                            <div class="md-form mb-5">
                                <input id="inputStoreName" name="StoreName" type="text" class="form-control" required>
                                <label for="inputStoreName">Store Name</label>
                            </div>
                            <div class="md-form mb-5">
                                <input id="inputStoreAddress" name="StoreAddress" type="text" class="form-control" required>
                                <label for="inputStoreAddress">Store Address</label>
                            </div>
                            <div class="form-group mb-4">
                                <label class="text-muted">Region</label>
                                <select asp-items="ViewBag.Regions" id="selectRegion" class="form-control" required>
                                    <option value="">[ SELECT ]</option>
                                </select>
                            </div>
                            <div class="form-group mb-5">
                                <label class="text-muted">Area</label>
                                <select id="selectArea" name="StoreAreaId" class="form-control" required>
                                    <option value="">[ SELECT ]</option>
                                </select>
                            </div>
                            <div class="md-form mb-5">
                                <input id="inputPostCode" name="PostCode" type="text" class="form-control" required>
                                <label for="inputPostCode">Postcode</label>
                            </div>
                            <button id="btnSignUp" class="btn btn-block btn-rounded btn-danger z-depth-1a mb-3" type="submit">Create account</button>
                            <div>
                                <span id="accountError" class="field-validation-error"></span>
                            </div>
                        </div>
                    </form>

                    <div class="mt-5">
                        <p class="mb-0 font-small grey-text d-flex justify-content-end">Already have account? <a href="/Account/Login" class="blue-text ml-1">Sign In</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="codeVerifyModal" tabindex="-1" role="dialog" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog cascading-modal" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary justify-content-center">
                <h5 class="m-0 white-text">Verify Mobile Number</h5>
            </div>

            <div class="modal-body">
                <form id="formVerify">
                    <div class="md-form mb-3">
                        <input id="inputCode" type="number" class="form-control" required>
                        <label for="inputCode">Enter Code</label>
                        <span id="codeError" class="field-validation-error"></span>
                    </div>

                    <div class="text-center">
                        <a id="btnResend" class="timerCount"></a>
                    </div>

                    <div class="text-center mt-4">
                        <button id="btnSubmitVerify" type="submit" class="btn btn-primary mt-1">Verify <i class="fas fa-check ml-1"></i></button>
                    </div>
                    <span id="verifyError" class="field-validation-error"></span>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        (function () {
            //registration form
            const formRegistration = document.getElementById("formRegistration");
            const btnSendCode = document.getElementById("btnSendCode");
            const mobileError = document.getElementById("mobileError");
            const codeVerifyModal = $("#codeVerifyModal");
            const othersInfo = formRegistration.querySelector("#othersInfo");

            //verify form
            const formVerify = document.getElementById("formVerify");
            const btnResend = formVerify.querySelector("#btnResend");
            const verifyError = formVerify.querySelector("#verifyError");

            //send code
            btnSendCode.addEventListener("click", function (evt) {
                mobileError.textContent = "";
                if (!formRegistration.inputMobile.value) return;

                this.disabled = true;
                this.innerText = "sending..";

                const time = 60;

                $.ajax({
                    type: "POST",
                    url: "/Seller/SendCode",
                    data: { mobile: formRegistration.inputMobile.value, time },
                    success: function (response) {
                        if (response.IsSuccess) {
                            codeVerifyModal.modal('show');
                            btnSendCode.disabled = false;
                            btnSendCode.innerText = "Verify";

                            startTimer(time);
                        } else {
                            btnSendCode.disabled = false;
                            btnSendCode.innerText = "Verify";
                            mobileError.textContent = response.Message;
                        }
                    },
                    error: function (err) {
                        console.log(err);
                        btnSendCode.disabled = false;
                        btnSendCode.innerText = "Verify";
                    }
                });
            });

            //re-send code
            btnResend.addEventListener("click", function (evt) {
                evt.preventDefault();

                if (!formRegistration.inputMobile.value) return;

                const time = 60;

                $.ajax({
                    type: "POST",
                    url: "/Seller/SendCode",
                    data: { mobile: formRegistration.inputMobile.value, time },
                    success: function (response) {
                        console.log(response);

                        if (response.IsSuccess) {
                            formVerify.inputCode.value = "";
                            startTimer(time);
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });

            //verify code
            formVerify.addEventListener('submit', function (evt) {
                evt.preventDefault();
                verifyError.textContent = "";

                this.btnSubmitVerify.disabled = true;
                this.btnSubmitVerify.textContent = "verifying...";

                const code = this.inputCode.value.trim();
                const mobile = formRegistration.inputMobile.value.trim();

                $.ajax({
                    type: "POST",
                    url: "/Seller/CodeVerify",
                    data: { code, mobile },
                    success: response => {
                        if (response.IsSuccess) {
                            codeVerifyModal.modal('hide');
                            formRegistration.inputMobile.setAttribute("readonly", "readonly");

                            btnSendCode.disabled = true;
                            btnSendCode.classList.add("btn-success");
                            btnSendCode.classList.remove("btn-danger");
                            btnSendCode.innerText = "Verified";

                            othersInfo.style.display = "block";
                        } else {
                            verifyError.textContent = response.Message;
                        }

                        this.btnSubmitVerify.disabled = false;
                        this.btnSubmitVerify.innerText = "verify";
                    },
                    error: function (err) {
                        console.log(err);
                        this.btnSubmitVerify.disabled = false;
                        this.btnSubmitVerify.textContent = "verify";
                    }
                });
            });

            //on change region
            const selectRegion = document.getElementById("selectRegion");
            const selectArea = document.getElementById("selectArea");

            selectRegion.addEventListener("change", function (evt) {
                selectArea.innerHTML = "";
                selectArea.appendChild(createOptions({ AreaId: "", AreaName: "[ SELECT ]" }));

                $.ajax({
                    url: "/Seller/GetAreaByRegion",
                    data: { id: this.value },
                    success: response => {
                        response.forEach(item => {
                            selectArea.appendChild(createOptions(item));
                        });
                    },
                    error: error => {
                        console.log(error);
                    }
                });
            });

            //create option
            function createOptions(item) {
                const option = document.createElement("option");
                option.innerText = item.AreaName;
                option.value = item.AreaId;

                return option;
            }

            //get form data as object
            const serializeForm = function (form) {
                const obj = {};
                const formData = new FormData(form);
                for (let key of formData.keys()) {
                    obj[key] = formData.get(key);
                }
                return obj;
            };


            //post registration
            formRegistration.addEventListener('submit', function (evt) {
                evt.preventDefault();

                const accountError = document.getElementById("accountError");
                accountError.textContent = "";

                const btn = this.btnSignUp;
                btnDisable(btn, true);

                $.ajax({
                    type: "POST",
                    url: "/Seller/SignUp",
                    data: serializeForm(this),
                    success: function (response) {
                        if (response.IsSuccess)
                            location.href = "/Seller/Success";
                        else
                            accountError.textContent = response.Message;

                        btnDisable(btn, false);
                    },
                    error: function (err) {
                        console.log(err);
                        btnDisable(btn, false);
                    }
                });
            });


            //count down
            function startTimer(duration) {
                let timer = duration;
                let seconds = 0;
                btnResend.classList.add("timerCount");

                const interval = setInterval(function () {
                    seconds = parseInt(timer % 60, 10);
                    seconds = seconds < 10 ? `0${seconds}` : seconds;

                    btnResend.textContent = `Resend after ${seconds}s`;
                    btnResend.style.pointerEvent = "none";

                    if (--timer < 0) {
                        clearInterval(interval);
                        btnResend.textContent = "Re Send Code";
                        btnResend.classList.remove("timerCount");
                    }

                }, 1000);
            }

            //btn disable
            function btnDisable(btn, isLoading) {
                btn.disabled = isLoading;
                btn.textContent = isLoading ? "submitting.." : "Create account";
            }
        })();
    </script>
}