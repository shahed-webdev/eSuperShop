@using eSuperShop.Repository
@model ProductDetailsModel

@{
    ViewData["Title"] = "Add Product Stock";
    Layout = "_SellerLayout";
}

@section Styles{
    <style>
        .productImage img { width: 100px; margin: 5px; border-radius: 3px; }
    </style>   
}


<div class="m-md-3">
    <h4 class="page-header mb-3">Add Product Stock</h4>
    <div class="row">
        <div class="col-xl-7 mb-3">
            <div class="card card-body">
                <h4 class="font-weight-bold mb-0">
                    @Model.Name
                    <small class="text-muted" style="text-decoration: line-through">৳@Model.OldPrice</small>
                    <small>৳@Model.Price</small>
                </h4>
                <p class="mb-0">@Model.ShortDescription</p>
                <hr/>
                <p>
                    <strong>Category: </strong>@Model.CatalogInfo.CatalogName,
                    <strong>Brand: </strong>@Model.BrandInfo.Name,
                    <strong>Slug Url: </strong>@Model.SlugUrl
                </p>

                <div class="mt-3">@Html.Raw(@Model.FullDescription)</div>
                
                <div class="productImage mt-3">
                    @foreach (var img in Model.Blobs)
                    {
                        <img src="@img.BlobUrl" alt="@img.DisplayOrder">
                    }
                </div>
            </div>
        </div>

        <div class="col-xl-5 mb-3">
            <form id="formAdd">
                <div id="attributeCard" class="card card-body mb-4">
                    <h5 class="font-weight-bold mt-3 mb-0">PRODUCT STOCK</h5>
                    <em class="mb-3">Select Attribute And Add Product Quantity</em>

                    @foreach (var value in Model.Attributes)
                    {
                        <div class="form-group">
                            <label>@value.KeyName</label>
                            <select name="AttributeValueId" class="form-control attributeSelect" required>
                                <option value="">[ SELECT ]</option>
                                @foreach (var item in value.Values)
                                {
                                    <option value="@item.ProductAttributeValueId">@item.Value</option>
                                }
                            </select>
                        </div>
                    }

                    <div class="form-group">
                        <label>Product Quantity</label>
                        <input type="number" name="Quantity" class="form-control" placeholder="Quantity" required>
                    </div>

                    <div class="form-group">
                        <label>Additional Price</label>
                        <input type="number" name="PriceAdjustment" class="form-control" placeholder="Additional Price">
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Add Stock" class="btn btn-danger btn-md">
                        <input type="hidden" name="ProductId" value="@Model.ProductId">
                    </div>
                </div>
            </form>

            <div class="card card-body">
                <h5 class="font-weight-bold mt-3">PRODUCT SPECIFICATION</h5>

                <div class="list-group-flush mt-3">
                    @foreach (var item in Model.Specifications)
                    {
                        <div class="list-group-item d-flex flex-wrap justify-content-between align-items-center">
                            <strong class="flex-grow-1">@item.KeyName</strong>
                            <label>@item.Value</label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        //on change attribute
        const attributeCard = document.getElementById("attributeCard");
        attributeCard.addEventListener("change", function(evt) {
            const element = evt.target;

            const onAttribute = element.classList.contains("attributeSelect");
            if (!onAttribute) return;

            const model = {
                ProductId: @Model.ProductId,
                ProductAttributeValueIds: attributeIds(true)
            }
            console.log(model)
            $.ajax({
                url: "/StoreProduct/GetInsertedStock",
                type: "POST",
                data: model,
                success: function(response) {
                    console.log(response);
                },
                error: function(err) { console.log(err) }
            });
        });

        //post
        const formAdd = document.getElementById("formAdd");
        formAdd.addEventListener("submit", function(evt) {
            evt.preventDefault();

            const model = {
                ProductId: @Model.ProductId,
                Quantity: +formAdd.Quantity.value,
                PriceAdjustment: +formAdd.PriceAdjustment.value,
                ProductQuantitySetAttribute: attributeIds(false)
            }

            $.ajax({
                url: "/StoreProduct/AddStock",
                type: "POST",
                data: model,
                success: function(response) {
                    console.log(response);
                },
                error: function(err) { console.log(err) }
            });
        });

        //get selected id
        function attributeIds(isArray) {
            const valueIds = document.getElementsByName("AttributeValueId");
            const AttributeValueId = [];
            valueIds.forEach(id => {
                if (id.value) {
                    isArray ? AttributeValueId.push(+id.value) : AttributeValueId.push({ ProductAttributeValueId: +id.value});
                }
            });

            return AttributeValueId;
        }
    </script>
}
