@{
    ViewData["Title"] = "Add Brand";
    Layout = "_AdminLayout";

    var baseUrl = CloudStorage.FileBuilder.BaseUrl();
}


@section Styles{
    <style>
        .logo { width: 50px; }
        .fa-spinner { pointer-events: none }
    </style>
}


<div class="container">
    <h4 class="page-header mb-3">Product Brand</h4>

    <div class="card card-body">
        <form id="formAdd">
            <div class="row align-items-center mb-3">
                <div class="col-lg-4">
                    <div class="md-form">
                        <label for="inputBrandName">Brand Name</label>
                        <input id="inputBrandName" name="Name" type="text" class="form-control" required>
                    </div>
                </div>
                <div class="col-lg-5">
                    <div class="md-form">
                        <div class="file-field">
                            <div class="btn btn-outline-danger btn-rounded btn-sm float-left">
                                <span>Choose Logo<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                <input name="fileLogo" type="file" accept="image/*">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload Logo" autocomplete="off" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 text-right">
                    <input id="btnSubmit" type="submit" value="submit" class="btn btn-danger btn-md" />
                </div>
            </div>
        </form>

        <table id="brand-table" class="table table-sm table-bordered">
            <thead>
                <tr>
                    <th><strong>Brand Name</strong></th>
                    <th style="width: 50px"><strong>Logo</strong></th>
                    <th style="width: 30px"><strong>Edit</strong></th>
                    <th style="width: 30px"><strong>Delete</strong></th>
                </tr>
            </thead>
        </table>
    </div>
</div>


@section Scripts{
    <script>
        $(function() {
            dataTable.getData();
        });

        //get data
        var dataTable = {
            table: null,
            init: function() {
                dataTable.table = $("#brand-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/Brand/GetBrand",
                        type: "POST"
                    },
                    columns:
                    [
                        { data: "Name", "render": function(data, type, row, meta) {
                                return `<a class="blue-text" href="/Brand/AssignedCatalog/${row.BrandId}">${data}</a>`;
                            }
                        },
                        {
                            data: "LogoFileName", "render": function(data, type, row, meta) {
                                return data ? `<img src="@baseUrl/thumb_${data}" alt="${row.Name}" class="logo">` : "";
                            }
                        },
                        {
                            data: "BrandId", "render": function(data, type, row, meta) {
                                return `<a class="fas fa-edit" href="/Brand/UpdateBrand/${data}"></a>`;
                            }
                        },
                        {
                            data: "BrandId", "render": function(data, type, row, meta) {
                                const fileName = row.LogoFileName ? row.LogoFileName : "";
                                return `<a class="delete fas fa-trash red-text" data-image="${fileName}" data-id="${data}"></a>`;
                            }
                        }
                    ],
                    columnDefs: [
                        { 'searchable': false, 'targets': [1, 2, 3] },
                        { 'sortable': false, 'targets': [1, 2, 3] },
                        { 'className': "text-center", "targets": [1, 2, 3] }
                    ]
                });
            },
            operand: {
                Equal: 0,
                NotEqual: 1,
                GreaterThan: 2,
                LessThan: 3,
                GreaterThanOrEqual: 4,
                LessThanOrEqual: 5,
                Contains: 6,
                StartsWith: 7,
                EndsWith: 8
            },
            getData: function() {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            },
            addSign: function(data) { return `${data}/-` }
        }


        //set image file
        $('input[type="file"]').change(function(e) {
            const pathInput = e.target.parentElement.parentElement.querySelector(".file-path");
            const size = e.target.files[0].size / 1024 / 1024;
            const allowSize = 2;
            const regex = new RegExp("(.*?)\.(jpeg|jpg|png|webp)$");


            if (!(regex.test(e.target.value.toLowerCase()))) {
                e.target.value = "";
                pathInput.value = "";

                $(pathInput).notify("Please select image file", { position: "bottom left" });
                return;
            }

            if (size > allowSize) {
                e.target.value = "";
                pathInput.value = "";
                $(pathInput).notify(`image size must be less than ${allowSize}MB. your file size:${size.toFixed()} MB`, { position: "bottom left" });
                return;
            }

            let fileName = "";
            for (let i = 0; i <= e.target.files.length - 1; i++) {
                fileName += i > 0 ? `, ${e.target.files[i].name}` : e.target.files[i].name;
            }

            pathInput.value = fileName;
        });


        //post brand
        const formAdd = document.getElementById("formAdd");
        formAdd.addEventListener('submit', function(evt) {
            evt.preventDefault()

            const formData = new FormData(this);
            const btn = this.btnSubmit;

            disableBtn(btn, true);

            $.ajax({
                type: "POST",
                url: "/Brand/AddBrand",
                data: formData,
                processData: false,
                contentType: false,
                success: response => {
                    if (response.IsSuccess) {
                        dataTable.getData();
                        this.reset();
                    }

                    disableBtn(btn, false);
                    $.notify(response.Message, response.IsSuccess ? "success" : "error");
                },
                error: function(err) {
                    console.log(err);
                    disableBtn(btn, false);
                }
            });
        });

        //on delete
        const table = document.getElementById("brand-table");
        table.addEventListener('click', function(evt) {
            const onDelete = evt.target.classList.contains("delete");
            if (!onDelete) return;

            const element = evt.target.parentElement.parentElement;
            const id = evt.target.getAttribute("data-id");
            const fileName = evt.target.getAttribute("data-image");
            const isConfirm = confirm("Are you sure you want to delete?");

            if (!isConfirm) return;

            showSpinner(evt.target, true);

            $.ajax({
                url: "/Brand/DeleteBrand",
                data: { id, fileName },
                success: function(response) {
                    $.notify(response.Message, response.IsSuccess ? "success" : "error");
                    showSpinner(evt.target, false);

                    if (response.IsSuccess)
                        element.remove();
                },
                error: function(err) {
                    console.log(err);
                    showSpinner(evt.target, false);
                }
            });
        });

        //disable btn
        function disableBtn(btn, isLoading) {
            btn.disabled = isLoading;
            btn.value = isLoading ? "submitting..." : "Submit";
        }

        //show spinner
        function showSpinner(element, isShow) {
            if (isShow) {
                element.classList.remove("fa-trash");
                element.classList.add("fa-spinner", "fa-spin");
            } else {
                element.classList.remove("fa-spinner", "fa-spin");
                element.classList.add("fa-trash");
            }
        }
    </script>
}
