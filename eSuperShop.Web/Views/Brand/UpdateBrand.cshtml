@using CloudStorage
@model BrandModel
@{
    ViewData["Title"] = "Update Brand";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var baseUrl = FileBuilder.BaseUrl();
}

<div class="container">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <h4 class="page-header mb-3">Update Brand</h4>

            <div class="card card-body">
                <form id="formUpdate">
                    <div class="md-form">
                        <label for="inputBrandName">Brand Name</label>
                        <input id="inputBrandName" value="@Model.Name" type="text" class="form-control" required>
                    </div>

                    <div class="md-form mt-5">
                        <div class="file-field">
                            <div class="btn btn-outline-danger btn-rounded btn-sm float-left">
                                <span>Choose Logo<i class="fas fa-upload ml-3" aria-hidden="true"></i></span>
                                <input id="fileImage" name="image" type="file" accept="image/*">
                            </div>
                            <div class="file-path-wrapper">
                                <input id="filePath" class="file-path validate" type="text" placeholder="Upload Logo" autocomplete="off" required>
                            </div>
                        </div>
                    </div>
                    
                    <div class="text-center">
                        <div class="mb-3">
                            <img id="prevImage" src="@baseUrl/@Model.LogoFileName" alt="@Model.Name" style="width: 100px">
                        </div>
                        <input id="btnSubmit" type="submit" value="Submit" class="btn btn-danger"/>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- image crop modal -->
<div class="modal fade" id="cropImageModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-notify modal-danger" role="document">
        <div class="modal-content text-center">
            <div class="modal-header d-flex justify-content-center">
                <p class="heading">Crop Logo</p>
            </div>
            <div class="modal-body">
                <div id="upload-demo"></div>
            </div>
            <div class="modal-footer flex-center">
                <button id="btnCrop" type="button" class="btn  btn-danger waves-effect">CROP</button>
                <button class="btn btn-outline-danger" data-dismiss="modal">CANCEL</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        //global variable
        const formData = new FormData();
        const imageError = $("#imageError");
        const previewImage = $('#prevImage');
        const cropImageModal = $('#cropImageModal');
        const btnCrop = $('#btnCrop');
        const cropImage = $('#upload-demo').croppie({
            viewport: { width: 200, height: 140 },
            boundary: { width: 210, height: 150 }
        });

        //set image file
        $('input[type="file"]').change(function (e) {
            const pathInput = e.target.parentElement.parentElement.querySelector(".file-path");
            const size = e.target.files[0].size / 1024 / 1024;
            const allowSize = 2;
            const regex = new RegExp("(.*?)\.(jpeg|jpg|png|webp)$");


            if (!(regex.test(e.target.value.toLowerCase()))) {
                e.target.value = "";
                pathInput.value = "";

                $(pathInput).notify("Please select image file", { position: "bottom left" });
                return;
            }

            if (size > allowSize) {
                e.target.value = "";
                pathInput.value = "";
                $(pathInput).notify(`image size must be less than ${allowSize}MB. your file size:${size.toFixed()} MB`, { position: "bottom left" });
                return;
            }

            let fileName = "";
            for (let i = 0; i <= e.target.files.length - 1; i++) {
                fileName += i > 0 ? `, ${e.target.files[i].name}` : e.target.files[i].name;
            }

            pathInput.value = fileName;
            readFile(this);
        });

        //crop done
        btnCrop.on('click', function () {
            cropImage.croppie('result', { type: 'blob' }).then(function (res) {
                previewImage.attr('src', URL.createObjectURL(res));

                formData.append("fileLogo", res, $('#filePath').val());
                cropImageModal.modal('hide');
            });
        });

        //read file
        function readFile(input) {
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.readAsDataURL(input.files[0]);

                reader.onload = function (e) {
                    cropImage.croppie('bind', { url: e.target.result }).then(function () {
                        $('.cr-slider').attr({ 'min': 0.5000, 'max': 1.5000 });
                    });
                }

                cropImageModal.modal('show');
            }
        }

        //update brand
        const formUpdate = document.getElementById("formUpdate");
        formUpdate.addEventListener('submit', function (evt) {

            evt.preventDefault()
            formData.append("Name", this.inputBrandName.value);
            formData.append("BrandId", @Model.BrandId);

            const btn = this.btnSubmit;

            loadingBtn(btn, true);

            $.ajax({
                type: "POST",
                url: "/Brand/UpdateBrand",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $.notify(response.Message, response.IsSuccess ? "success" : "error");
                  
                    if (response.IsSuccess) {
                        location.href = "/Brand/Add";
                        return;
                    }

                    loadingBtn(btn, false);
                },
                error: function (err) {
                    console.log(err);
                    loadingBtn(btn, false);
                }
            });
        });

        //btn loading
        function loadingBtn(btn, isLoading) {
            btn.disabled = isLoading;
            btn.value = isLoading ? "submitting..." : "submit";
        }
    </script>
}


