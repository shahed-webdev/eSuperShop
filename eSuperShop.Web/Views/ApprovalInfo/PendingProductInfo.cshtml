
@{
    ViewData["Title"] = "Pending Product Info";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="m-3">
    <h4 class="page-header mb-3">Pending Product Info</h4>

    <div class="card card-body">
        <table id="data-table" class="table table-sm table-bordered">
            <thead>
                <tr>
                    <th><strong>Product Name</strong></th>
                    <th><strong>Auth. Person</strong></th>
                    <th><strong>Store</strong></th>
                    <th><strong>Details</strong></th>
                </tr>
            </thead>
        </table>
    </div>
</div>


@section Scripts{
    <script>
        $(function () {
            dataTable.getData();
        });

        //get data
        var dataTable = {
            table: null,
            init: function () {
                dataTable.table = $("#data-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/ApprovalInfo/GetPendingProduct",
                        type: "POST"
                    },
                    columns:
                        [
                            {
                                data: "ProductName", "render": function (data, type, row, meta) {
                                    return `<strong class="d-block">${data}</strong><span>${row.CatalogName}</span>`;
                                }
                            },
                            {
                                data: "AuthorizedPerson", "render": function (data, type, row, meta) {
                                    return `<strong class="d-block">${data}</strong><span>${row.VerifiedPhone}</span>`;
                                }
                            },
                            {
                                data: "StoreName", "render": function (data, type, row, meta) {
                                    return `<strong class="d-block">${data}</strong><span>${row.Email}</span>`;
                                }
                            },
                            {
                                data: "ProductId", "render": function (data, type, row, meta) {
                                    return `<a href="/ApprovalInfo/PendingProductDetails/${data}">Details</a>`;
                                }
                            }
                        ],
                    columnDefs: [
                        //{ 'searchable': false, 'targets': [1, 2] },
                        //{ 'sortable': false, 'targets': [1, 2] },
                        { 'className': "text-center", "targets": [3] }
                    ]
                });
            },
            operand: {
                Equal: 0,
                NotEqual: 1,
                GreaterThan: 2,
                LessThan: 3,
                GreaterThanOrEqual: 4,
                LessThanOrEqual: 5,
                Contains: 6,
                StartsWith: 7,
                EndsWith: 8
            },
            getData: function () {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            },
            addSign: function (data) { return `${data}/-` }
        }

        //approve / delete
        const onTable = document.getElementById("data-table");
        onTable.addEventListener("click", function (evt) {
            const element = evt.target;

            //approve
            const onApprove = element.classList.contains("approve");
            if (onApprove) {
                const cb = element.previousElementSibling;

                if (!cb.checked) {
                    cb.disabled = true;

                    $.ajax({
                        type: "POST",
                        url: `/ApprovalInfo/ApproveProduct`,
                        data: { id: +cb.id },
                        success: function (response) {
                            $.notify(response.Message, response.IsSuccess ? "success" : "error");

                            if (!response.IsSuccess) {
                                cb.disabled = false;
                                return;
                            }

                            location.reload();
                        },
                        error: function (err) {
                            console.log(err);
                            cb.disabled = false;
                        }
                    });
                }
            }

            //delete
            const onDelete = element.classList.contains("delete");
            if (onDelete) {
                showSpinner(element, true);

                $.ajax({
                    url: `/ApprovalInfo/RejectProduct/${element.id}`,
                    success: function (response) {
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");
                        showSpinner(element, false);

                        if (response.IsSuccess)
                            location.reload();
                    },
                    error: function (err) {
                        console.log(err);
                        showSpinner(element, false);
                    }
                });
            }
        });

        //show spinner
        function showSpinner(element, isShow) {
            if (isShow) {
                element.classList.remove("fa-trash");
                element.classList.add("fa-spinner", "fa-spin");
            } else {
                element.classList.remove("fa-spinner", "fa-spin");
                element.classList.add("fa-trash");
            }
        }
    </script>
}