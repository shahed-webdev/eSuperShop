@using CloudStorage
@model ProductDetailsModel
@{
    ViewData["Title"] = "Pending Product Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var baseUrl = FileBuilder.BaseUrl();
}

@section Styles{
    <style>
        #product-image img { width: 100px; border-radius: 3px; }
        #product-image .deleteImg { cursor: pointer; color: red }
    </style>
}


<div class="m-md-3">
    <h4 class="page-header mb-3">Pending Product Details</h4>
    <div class="row">
        <div class="col-xl-7 mb-3">
            <div class="card card-body">
                <form id="updateProduct">
                    <div class="md-form">
                        <label for="inputProductName">Product Name</label>
                        <input id="inputProductName" value="@Model.Name" type="text" name="Name" class="form-control" required>
                    </div>
                    <div class="form-row">
                        <div class="col-lg-6">
                            <div class="md-form">
                                <label for="inputShortDescription">Short Description</label>
                                <input id="inputShortDescription" value="@Model.ShortDescription" type="text" name="ShortDescription" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="md-form">
                                <label for="inputSlugUrl">Slug Url (allow: a-z, 0-9, -, %)</label>
                                <input id="inputSlugUrl" value="@Model.SlugUrl" type="text" pattern="^[a-z0-9]+(?:-[a-z0-9%]+)*$" name="SlugUrl" class="form-control" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-lg-4">
                            <div class="md-form">
                                <select searchable="Find Product Brand" asp-for="BrandInfo.BrandId" asp-items="ViewBag.Brands" class="mdb-select">
                                    <option value="">[ Select Product Brand ]</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="md-form">
                                <label for="inputOldPrice">Regular Price</label>
                                <input id="inputOldPrice" value="@Model.OldPrice" type="text" class="form-control" disabled>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="md-form">
                                <label for="inputPrice">Sale Price</label>
                                <input id="inputPrice" value="@Model.Price" type="text" class="form-control" disabled>
                            </div>
                        </div>
                    </div>
                    <div class="md-form">
                        <p class="mb-1 text-muted">Product Description</p>
                        <textarea id="inputFullDescription" name="FullDescription">@Model.FullDescription</textarea>
                    </div>

                    <input type="submit" value="Update Info" class="btn btn-danger">
                </form>
            </div>
        </div>

        <div class="col-xl-5 mb-3">
            <div id="attributeCard" class="card card-body mb-4">
                <h5 class="font-weight-bold mt-3 mb-0">PRODUCT STOCK <small id="totalStock">(@Model.StockQuantity)</small></h5>
                <table class="table">
                    <thead>
                        <tr>
                            @foreach (var val in Model.Attributes)
                            {
                                <th><strong>@val.KeyName</strong></th>
                            }
                            <th><strong>Quantity</strong></th>
                            <th><strong>Additional Price</strong></th>
                        </tr>
                    </thead>
                    <tbody id="tBody">
                        @foreach (var head in Model.QuantitySets)
                        {
                            <tr data-id="@head.ProductQuantitySetId">
                                @foreach (var val in head.AttributesWithValue)
                                {
                                    <td>@val.Value</td>
                                }
                                <td class="quantity">@head.Quantity</td>
                                <td class="adjustPrice">৳@head.PriceAdjustment</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="card card-body mb-4">
                <h5 class="font-weight-bold mt-3">PRODUCT SPECIFICATION</h5>

                <div class="list-group-flush mt-3">
                    @foreach (var item in Model.Specifications)
                    {
                        <div class="list-group-item d-flex flex-wrap justify-content-between align-items-center">
                            <strong class="flex-grow-1">@item.KeyName</strong>
                            <label>@item.Value</label>
                        </div>
                    }
                </div>
            </div>

            <div class="card card-body">
                <h5 class="font-weight-bold mt-3">PRODUCT IMAGE</h5>

                <form id="updateImage">
                    <div class="row align-items-center mb-3">
                        <div class="col">
                            <div class="md-form">
                                <div class="file-field">
                                    <div class="btn btn-outline-danger btn-rounded waves-effect float-left btn-sm">
                                        <span>Choose file<i class="fas fa-upload ml-3"></i></span>
                                        <input name="fileImage" type="file" required>
                                    </div>
                                    <div class="file-path-wrapper">
                                        <input class="file-path validate" type="text" placeholder="Upload your file">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <input type="submit" value="Upload" class="btn btn-danger btn-md">
                        </div>
                    </div>
                </form>

                <ul id="product-image" class="pl-0 list-groupp list-group-flush">
                    @foreach (var img in Model.Blobs)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <img src="@baseUrl/thumb_@img.BlobFileName" alt="product image">
                            <i id="@img.BlobFileName" class="deleteImg fas fa-trash-alt"></i>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script defer src="https://cdn.ckeditor.com/ckeditor5/22.0.0/classic/ckeditor.js"></script>
    <script>
        $(function () {
            $('.mdb-select').materialSelect();

            //rich text editor
            const textArea = document.querySelector('#inputFullDescription');
            ClassicEditor.create(textArea).catch(error => console.error(error));

            //set image file
            $('input[type="file"]').change(function (e) {
                const pathInput = e.target.parentElement.parentElement.querySelector(".file-path");
                const size = e.target.files[0].size / 1024 / 1024;
                const allowSize = 2;
                const regex = new RegExp("(.*?)\.(jpeg|jpg|png|webp)$");


                if (!(regex.test(e.target.value.toLowerCase()))) {
                    e.target.value = "";
                    pathInput.value = "";

                    $(pathInput).notify("Please select image file", { position: "bottom left" });
                    return;
                }

                if (size > allowSize) {
                    e.target.value = "";
                    pathInput.value = "";
                    $(pathInput).notify(`image size must be less than ${allowSize}MB. your file size:${size.toFixed()} MB`, { position: "bottom left" });
                    return;
                }

                let fileName = "";
                for (let i = 0; i <= e.target.files.length - 1; i++) {
                    fileName += i > 0 ? `, ${e.target.files[i].name}` : e.target.files[i].name;
                }

                pathInput.value = fileName;
            });

        });

        (function () {
            const serializeForm = function (form) {
                const obj = {}, formData = new FormData(form);
                for (let key of formData.keys()) {
                    obj[key] = formData.get(key);
                }
                return obj;
            };

            //update info
            const updateProduct = document.getElementById("updateProduct");
            updateProduct.addEventListener("submit", function (evt) {
                evt.preventDefault();

                $.ajax({
                    type: "POST",
                    url: `/ApprovalInfo/UpdateProductInfo`,
                    data: serializeForm(this),
                    success: function (response) {
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");

                        if (!response.IsSuccess)
                            location.reload();
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });


            //add new image
            const updateImage = document.getElementById("updateImage");
            updateImage.addEventListener("submit", function (evt) {
                evt.preventDefault();

                $.ajax({
                    url: "/ApprovalInfo/AddProductImage",
                    data: new FormData(this),
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");

                        if (response.IsSuccess)
                            location.reload();
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });


            //delete image
            const productImage = document.getElementById("product-image");
            productImage.addEventListener("click", function (evt) {
                const element = evt.target;

                const onDelete = element.classList.contains("deleteImg");
                if (!onDelete) return;

                const fileName = element.id;
                $.ajax({
                    type: "POST",
                    url: `/ApprovalInfo/DeleteProductImage`,
                    data: { fileName },
                    success: function (response) {
                        $.notify(response.Message, response.IsSuccess ? "success" : "error");

                        if (!response.IsSuccess)
                            location.reload();
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });
        })();
    </script>
}

