@using eSuperShop.Repository
@model CatalogAssignDetailsModel

@{
    ViewData["Title"] = "Category Assigned Details";
    Layout = "_AdminLayout";
}

@section Styles{
    <style>
        .list-group i{cursor: pointer}
        .list-group .fa-spin { pointer-events: none}
    </style> 
}

<div class="container">
    <h4 class="page-header">
        Category: <small class="text-lowercase">@Model.CatalogInfo.CatalogName</small> 
    </h4>
    <a href="/Category"><i class="far fa-long-arrow-alt-left mr-1 mb-4"></i>Back to List</a>

    <div id="assignList" class="row">
        <div class="col-lg-4">
            <ul class="list-group list-group-flush z-depth-1 rounded">
                <li class="list-group-item active py-3">
                    <h5 class="font-weight-bold mb-0">Brand</h5>
                </li>

                @if (Model.Brands.Count < 1)
                {
                    <li class="list-group-item text-muted">Brand Not Assigned</li>
                }

                @foreach (var brand in Model.Brands)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @brand.Name
                        <i data-id="@brand.BrandId" class="brand-delete fas fa-trash red-text"></i>
                    </li>
                }
            </ul>
        </div>

        <div class="col-lg-4">
            <ul class="list-group list-group-flush z-depth-1 rounded">
                <li class="list-group-item active py-3">
                    <h5 class="font-weight-bold mb-0">Attribute</h5>
                </li>

                @if (Model.Attributes.Count < 1)
                {
                    <li class="list-group-item text-muted">Attribute Not Assigned</li>
                }

                @foreach (var attributes in Model.Attributes)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @attributes.KeyName
                        <i data-id="@attributes.AttributeId" class="attribute-delete fas fa-trash red-text"></i>
                    </li>

                }
            </ul>
        </div>

        <div class="col-lg-4">
            <ul class="list-group list-group-flush z-depth-1 rounded">
                <li class="list-group-item active py-3">
                    <h5 class="font-weight-bold mb-0">Specification</h5>
                </li>

                @if (Model.Specifications.Count < 1)
                {
                    <li class="list-group-item text-muted">Specification Not Assigned</li>
                }

                @foreach (var specification in Model.Specifications)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @specification.KeyName
                        <i data-id="@specification.SpecificationId" class="specification-delete fas fa-trash red-text"></i>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>



@section Scripts{
    <script>
        const assignList = document.getElementById('assignList');
        assignList.addEventListener('click', function(evt) {
            const element = evt.target;

            const onBrand = element.classList.contains("brand-delete");
            const onAttribute = element.classList.contains("attribute-delete");
            const onSpecification = element.classList.contains("specification-delete");

            if (onBrand) {
                const id = +element.getAttribute('data-id');
                showSpinner(element, true);

                unAssignCatalog(id, "brand", function(response) {
                    showSpinner(element, false);
                    element.parentElement.remove();
                    console.log(response)
                });
            }

            if (onAttribute) {
                const id = +element.getAttribute('data-id');
                showSpinner(element, true);

                unAssignCatalog(id, "attribute", function(response) {
                    showSpinner(element, false);
                    element.parentElement.remove();
                    console.log(response)
                });
            }

            if (onSpecification) {
                const id = +element.getAttribute('data-id');
                showSpinner(element, true);

                unAssignCatalog(id, "specification", function(response) {
                    showSpinner(element, false);
                    element.parentElement.remove();
                    console.log(response)
                });
            }
        });

        //show spinner
        function showSpinner(element, isShow) {
            if (isShow) {
                element.classList.remove("fa-trash");
                element.classList.add("fa-spinner", "fa-spin");
            } else {
                element.classList.remove("fa-spinner", "fa-spin");
                element.classList.add("fa-trash");
            }
        }

        //un assign post
        function unAssignCatalog(id, type, cb) {
            const data = { id, catalogId: @Model.CatalogInfo.CatalogId, type }
            $.ajax({
                url: "/Category/UnAssignCatalog",
                data,
                success: cb,
                error: function(err) { console.log(err.responseText) }
            });
        }
    </script>
}
